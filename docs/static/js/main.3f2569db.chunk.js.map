{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EAEPU,SArBY,SAACP,GAErBF,EAAeE,EAAEQ,OAAOF,a,+BCLnBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGXG,EAHW,gBAIGA,EAAKC,OAJR,uBAIVC,EAJU,EAIVA,KAGPC,QAAQC,IAAIF,GACNG,EAAKH,EAAKI,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVZ,IAAG,UAACU,EAAIG,cAAL,aAAC,EAAYC,iBAAiBd,QAZxB,kBAgBVQ,GAhBU,4CAAD,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,IAEhC,OACI,sBAAKgB,UAAU,0CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAGjB,CAACtB,IAEGuB,EDfwBK,CAAa5B,GAA/Be,EADsB,EAC3BR,KAAae,EADc,EACdA,QAYrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IACnDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAIQA,GAHCA,EAAIC,aEK1BgB,EA1BM,WACjB,IADuB,EAEa3C,mBADlB,CAAC,cADI,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KASvB,OACI,gCACI,8CAEC,cAAC,EAAD,CAAaA,cAAeA,IAC7B,uBACA,6BAEQ6C,EAAWnB,KAAI,SAAAX,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjBtC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3f2569db.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        /* console.log(e.target.value) */\r\n        setInputValue( e.target.value)\r\n    }\r\n\r\n    const handleOnSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n            /* setCategories([...categories, inputValue]); */\r\n            setCategories(cats=>[inputValue, ...cats ]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit} >\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                /* onChange={(e)=>console.log(e)} */\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired,\r\n}\r\n","\r\n\r\nexport const getGifs=async(category)=>{\r\n    /* el encondedUrl sirve para espapar de los espacios de la caetgory */\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=UsornkQGBLk0Mtx74V8SLqGngjL4ozIN`;\r\n    const resp=await fetch(url);\r\n    const {data}= await resp.json();\r\n\r\n    /* console.log(data[0].images.original.url) */\r\n    console.log(data)\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url, /* el signo de interrogacion indica que si viene una imagen que lo traiga y sino viene que no lo traiga */\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n    /* console.log(gifs);\r\n    setImages(gifs); */\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    /* console.log({id, title, url}) */\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const { data:images, loading }=useFetchGifs(category);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     /* uno puede ser asi */\r\n    //     /* .then(imgs=>{\r\n    //         setImages(imgs)\r\n    //     }) */\r\n    //     /* y otro asi: */\r\n    //     .then(setImages)\r\n    // }, [category])\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\" >Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map((img)=>(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                /* img={img}  */\r\n                                /* mejor es desestructurar los componentes del img */\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false,\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n    \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const initialData=['One Piece']\r\n    const [categories, setCategories] = useState(initialData);\r\n\r\n    /* const handleAdd=()=>{\r\n        // setCategories([...categories, 'One Punch']);\r\n        setCategories(cats=>[...cats, 'One Punch']);\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            {/* {<AddCategory setCategories={setCategories} categories={categories} />} */}\r\n            {<AddCategory setCategories={setCategories} />}\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}